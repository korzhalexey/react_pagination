{"version":3,"sources":["components/dropdown/dropdown.jsx","components/navigation/navigation.jsx","components/pagination/pagination.jsx","app.jsx","index.jsx"],"names":["Dropdown","total","selectedValue","setSelectedValue","setActivePage","perPageOptions","Array","from","length","className","name","onChange","event","target","value","map","option","index","nanoid","Navigation","activePage","pageLinksAmount","Math","ceil","pages","lastPage","onClick","page","cn","Pagination","perPage","useState","rangeStart","rangeEnd","App","ReactDOM","render","document","getElementById"],"mappings":"yMAmCeA,MA/Bf,YAA8E,IAA1DC,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,cAMpDC,EAAiBC,MAAMC,KAAK,CAAEC,OAAQP,IAE5C,OACE,qBAAKQ,UAAU,WAAf,SACE,wBACEC,KAAK,SACLD,UAAU,aACVE,SAZgB,SAACC,GACrBT,EAAiBS,EAAMC,OAAOC,OAC9BV,EAAc,IAWVU,MAAOZ,EAJT,SAOIG,EAAeU,KAAI,SAACC,EAAQC,GAAT,OACjB,wBAEEH,QAASG,EAFX,SAIIA,GAHGC,uB,gBCyBJC,MA5Cf,YAA0E,IAApDC,EAAmD,EAAnDA,WAAYhB,EAAuC,EAAvCA,cAAeH,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,cAChDmB,EAAkBC,KAAKC,KAAKtB,EAAQC,GACpCsB,EAAQlB,MAAMC,KAAK,CAAEC,OAAQa,IAE7BI,EAAWD,EAAMhB,OAEvB,OACE,8BACE,qBAAIC,UAAU,4BAAd,UACE,oBACEA,UAAU,YACViB,QAAS,kBARC,IASRN,GAA4BhB,IAAgBgB,IAHhD,SAME,wBAAQX,UAAU,YAAlB,wBAGAe,EAAMT,KAAI,SAACY,EAAMV,GAAP,OACR,oBAEER,UAAWmB,IAAG,CACZ,aAAa,EACb,SAAYX,IAAUG,IAExBM,QAAS,kBAAMtB,EAAca,IAN/B,SAQE,wBAAQR,UAAU,YAAlB,SAA+BQ,KAP1BC,kBAWX,oBACET,UAAU,YACViB,QAAS,kBACPN,IAAeK,GAAYrB,IAAgBgB,IAH/C,SAME,wBAAQX,UAAU,YAAlB,0BCHKoB,MAjCf,YAA+C,IAAzB5B,EAAwB,EAAxBA,MAAO6B,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,KACpC,EAA0CI,mBAASD,GAAnD,mBAAO5B,EAAP,KAAsBC,EAAtB,KACA,EAAoC4B,mBAASJ,GAA7C,mBAAOP,EAAP,KAAmBhB,EAAnB,KACM4B,EAAa,GAAKZ,EAAa,GAAKlB,EACpC+B,EAAWb,EAAalB,EAE9B,OACE,sBAAKO,UAAU,cAAf,UACE,sCACMuB,EADN,cACsBC,GAAYhC,EAAQgC,EAAWhC,EADrD,eACiEA,KAGjE,sBAAKQ,UAAU,yDAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,CACER,MAAOA,EACPC,cAAeA,EACfC,iBAAkBA,EAClBC,cAAeA,MAInB,cAAC,EAAD,CACEH,MAAOA,EACPC,cAAeA,EACfkB,WAAYA,EACZhB,cAAeA,WCZV8B,EAfH,WAEV,OACE,qCACE,oBAAIzB,UAAU,cAAd,wBAEA,cAAC,EAAD,CACER,MAAO,GACP6B,QAAS,EACTH,KAAM,QCVdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fcca4057.chunk.js","sourcesContent":["import React from 'react'\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nfunction Dropdown({ total, selectedValue, setSelectedValue, setActivePage }) {\n  const selectHandler = (event) => {\n    setSelectedValue(event.target.value);\n    setActivePage(1);\n  }\n\n  const perPageOptions = Array.from({ length: total });\n\n  return (\n    <div className=\"dropdown\">\n      <select\n        name=\"select\"\n        className=\"btn border\"\n        onChange={selectHandler}\n        value={selectedValue}\n      >\n        {\n          perPageOptions.map((option, index) => (\n            <option\n              key={nanoid()}\n              value={++index}\n            >\n              { index }\n            </option>\n          ))\n        }\n      </select>\n    </div>\n  );\n}\n\nexport default Dropdown;\n\nDropdown.propTypes = {\n  total: PropTypes.number.isRequired,\n}\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport cn from 'classnames';\n\nfunction Navigation({ activePage, setActivePage, total, selectedValue }) {\n  const pageLinksAmount = Math.ceil(total / selectedValue);\n  const pages = Array.from({ length: pageLinksAmount });\n  const firstPage = 1;\n  const lastPage = pages.length;\n\n  return (\n    <nav>\n      <ul className=\"pagination flex-wrap my-0\">\n        <li\n          className=\"page-item\"\n          onClick={() => (\n            activePage !== firstPage && setActivePage(--activePage)\n          )}\n        >\n          <button className=\"page-link\">Previous</button>\n        </li>\n        {\n          pages.map((page, index) => (\n            <li\n              key={nanoid()}\n              className={cn({\n                'page-item': true,\n                'active': ++index === activePage\n              })}\n              onClick={() => setActivePage(index)}\n            >\n              <button className=\"page-link\">{index}</button>\n            </li>\n          ))\n        }\n        <li\n          className=\"page-item\"\n          onClick={() => (\n            activePage !== lastPage && setActivePage(++activePage)\n          )}\n        >\n          <button className=\"page-link\">Next</button>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../dropdown/dropdown';\nimport Navigation from '../navigation/navigation';\n\nfunction Pagination({ total, perPage, page }) {\n  const [selectedValue, setSelectedValue] = useState(perPage);\n  const [activePage, setActivePage] = useState(page);\n  const rangeStart = 1 + (activePage - 1) * selectedValue;\n  const rangeEnd = activePage * selectedValue\n\n  return (\n    <div className=\"text-center\">\n      <p>\n        {`${rangeStart} - ${rangeEnd <= total ? rangeEnd : total} of ${total}`}\n      </p>\n\n      <div className=\"pagination flex align-items-end justify-content-center\">\n        <div className=\"mx-3\">\n          <Dropdown\n            total={total}\n            selectedValue={selectedValue}\n            setSelectedValue={setSelectedValue}\n            setActivePage={setActivePage}\n          />\n        </div>\n\n        <Navigation\n          total={total}\n          selectedValue={selectedValue}\n          activePage={activePage}\n          setActivePage={setActivePage}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Pagination;\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n}\n","import React from 'react';\nimport './app.scss';\nimport Pagination from './components/pagination/pagination';\n\nconst App = () => {\n\n  return (\n    <>\n      <h1 className=\"text-center\">Pagination</h1>\n\n      <Pagination\n        total={42}\n        perPage={5}\n        page={4}\n      />\n    </>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}